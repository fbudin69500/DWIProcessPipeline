echo('Prepare ')
FileExists( var ${OUTPUTDIR} )
echo('OUTPUTDIR = ' ${OUTPUTDIR})
If( ${var} == 0 )
  echo('Creation of the output directory: '${OUTPUTDIR})
  MakeDirectory( ${OUTPUTDIR} )
EndIf( ${var} == 0 )
FileExists( var ${TEMPDIR} )
If( ${var} == 0 )
  echo('Creation of the temporary directory: '${TEMPDIR})
  MakeDirectory( ${TEMPDIR} )
EndIf( ${var} == 0 )


If( ${COPY_INPUTS_IMAGES} == TRUE )
  #copy image to process
  Set( ORIG_IMAGE ${INPUT}.${EXT} )
  If( ${INPUTTYPE} == 'DWI' )
      Set( CmdTool ${ResampleVolume2PATH} )
      Set( DWImage ${ROOTNAME}.nrrd )
  EndIf( ${INPUTTYPE} == 'DWI' )
  If( ${INPUTTYPE} == 'scalar' )
      Set( CmdTool ${ResampleVolume2PATH} )
      Set( B0_EXT nrrd )
      Set( B0 ${ROOTNAME}.${B0_EXT} )
  EndIf( ${INPUTTYPE} == 'scalar' )
  If( ${INPUTTYPE} == 'DTI' )
      Set( CmdTool ${ResampleDTIPATH} )
      Set( DTImage ${ROOTNAME}.nrrd )
  EndIf( ${INPUTTYPE} == 'DTI' )
  echo ('Copying input image to output directory' )
  Set( Cmd ${CmdTool} ${INPUTDIR}/${ORIG_IMAGE} ${OUTPUTDIR}/${ROOTNAME}.nrrd -i nn )
  Run( output ${Cmd} )
  Echo( ${output} )
  Set( EXT nrrd )
  Set( INPUT ${ROOTNAME} )
  Set( INPUTDIR ${OUTPUTDIR} )
  Set( DTI_DIR ${OUTPUTDIR} )
echo('DTI_DIR = ' ${DTI_DIR})
  #copy atlas
  echo ('Copying atlas image to output directory' )
  Set( Cmd ${ResampleVolume2PATH} ${TEMPLATEDIR}/${TEMPLATE} ${OUTPUTDIR}/template.nrrd -i nn )
  Run( output ${Cmd} )
  Echo( ${output} )
  Set( TEMPLATEDIR ${OUTPUTDIR} )
  Set( TEMPLATE template.nrrd )
EndIf( ${COPY_INPUTS_IMAGES} == TRUE )
If( ${DONT_COPY_INPUTS_TRANS} == FALSE )
  #Copy initial transform
  if(${InitialTransform} != '' )
    GetFilename( EXT_TRANS ${InitialTransform} EXTENSION )
    CopyFile( ${InitialTransform} ${OUTPUTDIR}/InitialTransform${EXT_TRANS} )
echo()
echo('Copyfile 1 ' ${InitialTransform} ' to '${OUTPUTDIR}/InitialTransform${EXT_TRANS} )
echo()
    set(InitialTransform  ${OUTPUTDIR}/InitialTransform${EXT_TRANS} )
  endif(${InitialTransform} != '' )
  #Copy transform
  if(${TRANSFORMATIONFILE} != '' )
    GetFilename( EXT_TRANS ${TRANSFORMATIONFILE} EXTENSION )
echo()
echo('Copyfile 2 ' ${TRANSFORMATIONFILE} ${OUTPUTDIR}/Transform${EXT_TRANS} )
echo()
    CopyFile( ${TRANSFORMATIONFILE} ${OUTPUTDIR}/Transform${EXT_TRANS} )
    set(TRANSFORMATIONFILE  ${OUTPUTDIR}/Transform${EXT_TRANS} )
    Set( TransformRelativePATH Transform${EXT_TRANS} )
  endif(${TRANSFORMATIONFILE} != '' )
EndIf( ${DONT_COPY_INPUTS_TRANS} == FALSE )


If (${COMPUTEORIENTATION} == TRUE ) Then
  echo ('Computation of orientation transformation' )
  Set( ComputeOrientationCmd ${ManualImageOrientPATH} ${MANUALORIENTATION} LPS ${TEMPDIR}/${ROOTNAME}_orientation.txt )
  Run (output ${ComputeOrientationCmd})
  echo(${output})
  Set( ORIG_IMAGE ${INPUT}.${EXT} )
  Set( ORIENTED_IMAGE ${ROOTNAME}_oriented.nrrd )
  If( ${INPUTTYPE} == 'DWI' )
      Set( DWImage ${ORIENTED_IMAGE} )
      Set( CmdTool ${ResampleVolume2PATH} )
  EndIf( ${INPUTTYPE} == 'DWI' )
  If( ${INPUTTYPE} == 'scalar' )
      Set( B0 ${ORIENTED_IMAGE} )
      Set( B0_EXT nrrd )
      Set( CmdTool ${ResampleVolume2PATH} )
  EndIf( ${INPUTTYPE} == 'DWI' )
  If( ${INPUTTYPE} == 'DTI' )
      Set( DTImage ${ORIENTED_IMAGE} )
      Set( CmdTool ${ResampleDTIPATH} )
  EndIf( ${INPUTTYPE} == 'DTI' )
  Set( GRIDorient ${TEMPDIR}/${ROOTNAME}_orientation_grid.nrrd )
  Set( GridCmd ${ITKTransformToolsPATH} size ${INPUTDIR}/${ORIG_IMAGE} ${TEMPDIR}/${ROOTNAME}_orientation.txt --grid ${GRIDorient} )
  Run( output ${GridCmd} )
  Echo( ${output} )
  Set( Cmd ${CmdTool} ${INPUTDIR}/${ORIG_IMAGE} ${OUTPUTDIR}/${ORIENTED_IMAGE} -f ${TEMPDIR}/${ROOTNAME}_orientation.txt -R ${GRIDorient} )
  Run( output ${Cmd} )
  Echo( ${output} )
  Set( EXT nrrd )
#  GetFilename( INPUT ${ORIENTED_IMAGE} NAME_WITHOUT_EXTENSION )
  RegEx( INPUT ${ORIENTED_IMAGE} '\.nrrd' REPLACE '' )
  GetFilename( INPUT ${INPUT} NAME )
  Set( INPUTDIR ${OUTPUTDIR} )
  Set( DTI_DIR ${OUTPUTDIR} )
EndIf (${COMPUTEORIENTATION})

If( ${INPUTTYPE} == 'DWI' )
  If( ${CREATEB0} == FALSE && ${CREATEIDWI} == FALSE )
    Set( BiasCorrection FALSE )
  EndIf( ${CREATEB0} == FALSE && ${CREATEIDWI} == FALSE )
  If( ${BiasCorrection} == TRUE || ${SKULLSTRIP} == TRUE )
    Set( CREATEB0 TRUE )
  EndIf( ${BiasCorrection} == TRUE || ${SKULLSTRIP} == TRUE )
  #We always create the B0 image, in the temp directory. It is used to compute the bias field correction and the mask
  Set( B0Flag "" )
  Set( IDWIFlag "" )
  echo ('Creation of the DTI' )
  Set( MASK ${ROOTNAME}_mask_from_dti_estimation.nrrd )
  Set( BASELINE ${ROOTNAME}_baseline.nrrd )
  Set (GenerateDTICmd ${DiffusionTensorEstimationPATH} ${INPUTDIR}/${DWImage} --removeislands -o 0 -e WLS --shiftNeg ${OUTPUTDIR}/${DTImage} ${TEMPDIR}/${BASELINE} ${TEMPDIR}/${MASK} )
  Run (output ${GenerateDTICmd})
  Echo (${output})
  If (${CREATEB0} == TRUE ) Then
    Set( B0Flag --B0 ${TEMPDIR}/${B0} )
  EndIf (${CREATEB0})
  If (${CREATEIDWI} == TRUE ) Then
    Set (IDWIFlag --idwi ${TEMPDIR}/${IDWImage} )
  EndIf (${CREATEIDWI})
  If (${CREATEB0} == TRUE || ${CREATEIDWI} == TRUE ) Then
    echo ('Creation of B0 and/or IDWI' )
    Set (GenerateCmd ${dtiestimPATH} --dwi_image ${INPUTDIR}/${DWImage} --tensor_output ${TEMPDIR}/${DTImage} ${B0Flag} ${IDWIFlag} )
    Run (output ${GenerateCmd})
    Echo (${output})    
  Endif (${CREATEB0} == TRUE || ${CREATEIDWI} == TRUE )
EndIf( ${INPUTTYPE} == 'DWI' )

If( ${BiasCorrection} == TRUE && N4PATH )
  include( BiasFieldCorrection.bms )
EndIf( ${BiasCorrection} == TRUE && N4PATH )

If(${InitialTransform} != '' )
  Set( Grid ${TEMPDIR}/initialGrid.nrrd )
  Set( GridCmd ${ITKTransformToolsPATH} size ${INPUTDIR}/${INPUT}.${EXT} ${InitialTransform} --grid ${Grid} )
  Run( output ${GridCmd} )
  echo( ${output} )
  Set( GridCmdIso ${ITKTransformToolsPATH} iso ${Grid} --grid ${Grid} )
  Run( output ${GridCmdIso} )
  echo( ${output} )
Endif(${InitialTransform} != '' )

If( ${SCALE} == TRUE )
  Set( Grid ${OUTPUTDIR}/ImageGrid.nrrd )
  If(${InitialTransform} == '' )
    Set( Cmd ${ITKTransformToolsPATH} iso ${INPUTDIR}/${INPUT}.${EXT} --grid ${Grid} )
    Run( output ${Cmd} )
    echo( ${output} )
  Endif(${InitialTransform} == '' )

  Set( ATLAS_ISO_SCALED ${OUTPUTDIR}/template_iso_scale.nrrd )
  Set( TemplateGrid ${TEMPDIR}/template_iso_scale_grid.nrrd )
  Set( Cmd ${ITKTransformToolsPATH} iso ${TEMPLATEDIR}/${TEMPLATE} --grid ${TemplateGrid} )
  Run( output ${Cmd} )
  echo( ${output} )
  Set( ResampleCmd ${ResampleVolume2PATH} ${TEMPLATEDIR}/${TEMPLATE} ${ATLAS_ISO_SCALED} -R ${TemplateGrid} )
  Run( output ${ResampleCmd} )
  echo( ${output} )
  Set( ImageMathCmd ${ImageMathPATH} ${ATLAS_ISO_SCALED} -changeSp 1,1,1 -outfile ${ATLAS_ISO_SCALED} -type float )
  Run( output ${ImageMathCmd} )
  echo( ${output} )
EndIf( ${SCALE} == TRUE )
